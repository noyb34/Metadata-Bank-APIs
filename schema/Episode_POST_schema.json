{
  "required": [
    "ApproximateLength",
    "EpisodeClass",
    "EpisodeNumber",
    "PrimaryGenre",
    "ReferentType",
    "Title",
    "TitleClass"
  ],
  "type": "object",
  "errorMessage": {
    "type": "The request should be an object",
    "required": {
      "ApproximateLength": "ApproximateLength is Required",
      "EpisodeClass": "EpisodeClass is Required",
      "EpisodeNumber": "EpisodeNumber is Required",
      "PrimaryGenre": "PrimaryGenre is Required",
      "ReferentType": "ReferentType is Required",
      "TitleClass": "TitleClass is Required",
      "Title": "Title is Required"
    }
  },
  "properties": {
    "EpisodeUID": {
      "pattern": "^(.*)$",
      "type": "string",
      "errorMessage": {
        "type": "EpisodeUID must be a String"
      }
    },
    "ParentUID": {
      "minLength": 1,
      "pattern": "^(.*)$",
      "type": "string",
      "errorMessage": {
        "type": "ParentUID must be a String",
        "minLength": "ParentUID should have a minimum one character"
      }
    },
    "StructuralType": {
      "transform": [
        "trim",
        "toEnumCase"
      ],
      "type": "string",
      "enum": [
        "Abstraction",
        "Performance",
        "Digital"
      ],
      "errorMessage": {
        "type": "StructuralType must be a String",
        "enum": "StructuralType must be an Abstraction, Performace or Digital irrespective to Case."
      }
    },
    "ReferentType": {
      "transform": [
        "trim",
        "toEnumCase"
      ],
      "type": "string",
      "enum": [
        "Series",
        "Season",
        "TV",
        "Movie",
        "Short",
        "Web",
        "Compilation",
        "Supplemental"
      ],
      "errorMessage": {
        "type": "ReferentType must be a String",
        "enum": "ReferentType must be a Series, Season, TV, Movie, Short, Web, Compilation or Supplemental irrepective to case."
      }
    },
    "EntityType": {
      "pattern": "^(.*)$",
      "type": "string",
      "errorMessage": {
        "type": "EntityType must be a String"
      }
    },
    "EidrId": {
      "pattern": "^(.*)$",
      "type": "string",
      "errorMessage": {
        "type": "EidrId must be a String"
      }
    },
    "DistributionNumber": {
      "type": "integer",
      "format": "int32",
      "errorMessage": {
        "type": "DistributionNumber must be an Integer",
        "format": "DistributionNumber must be in int32 format"
      }
    },
    "CreateDateTime": {
      "pattern": "^(.*)$",
      "type": "string",
      "errorMessage": {
        "type": "CreateDateTime must be a String"
      }
    },
    "UpdateDateTime": {
      "pattern": "^(.*)$",
      "type": "string",
      "errorMessage": {
        "type": "UpdateDateTime must be a String"
      }
    },
    "PublishedStatus": {
      "pattern": "^(.*)$",
      "type": "string",
      "errorMessage": {
        "type": "PublishedStatus must be a String"
      }
    },
    "Title": {
      "minLength": 1,
      "pattern": "^(.*)$",
      "type": "string",
      "errorMessage": {
        "type": "Title must be a String",
        "minLength": "Title should have a minimum one character"
      }
    },
    "TitleClass": {
      "minLength": 1,
      "pattern": "^(.*)$",
      "type": "string",
      "errorMessage": {
        "type": "TitleClass must be a String",
        "minLength": "TitleClass should have a minimum one character"
      }
    },
    "Title120": {
      "pattern": "^(.*)$",
      "type": "string",
      "errorMessage": {
        "type": "Title120 must be a String"
      }
    },
    "TitleLanguage": {
      "transform": [
        "trim",
        "toEnumCase"
      ],
      "type": "string",
      "enum": [
        "aa",
        "ab",
        "ae",
        "af",
        "ak",
        "am",
        "an",
        "ar",
        "as",
        "av",
        "ay",
        "az",
        "ba",
        "be",
        "bg",
        "bh",
        "bi",
        "bm",
        "bn",
        "bo",
        "br",
        "bs",
        "ca",
        "ce",
        "ch",
        "co",
        "cr",
        "cs",
        "cu",
        "cv",
        "cy",
        "da",
        "de",
        "dv",
        "dz",
        "ee",
        "el",
        "en",
        "eo",
        "es",
        "et",
        "eu",
        "fa",
        "ff",
        "fi",
        "fj",
        "fl",
        "fo",
        "fr",
        "fy",
        "ga",
        "gd",
        "gl",
        "gn",
        "gu",
        "gv",
        "ha",
        "haw",
        "he",
        "hi",
        "ho",
        "hr",
        "ht",
        "hu",
        "hy",
        "hz",
        "ia",
        "id",
        "ie",
        "ig",
        "ii",
        "ik",
        "io",
        "is",
        "it",
        "iu",
        "ja",
        "jv",
        "ka",
        "kg",
        "ki",
        "kj",
        "kk",
        "kl",
        "km",
        "kn",
        "ko",
        "kr",
        "ks",
        "ku",
        "kv",
        "kw",
        "ky",
        "la",
        "lb",
        "lg",
        "li",
        "ln",
        "lo",
        "lt",
        "lu",
        "lv",
        "mg",
        "mh",
        "mi",
        "mk",
        "ml",
        "mn",
        "mr",
        "ms",
        "mt",
        "my",
        "na",
        "nb",
        "nd",
        "ne",
        "ng",
        "nl",
        "nn",
        "no",
        "nr",
        "nv",
        "ny",
        "oc",
        "oj",
        "om",
        "or",
        "os",
        "pa",
        "pi",
        "pl",
        "ps",
        "pt",
        "qu",
        "rm",
        "rn",
        "ro",
        "ru",
        "rw",
        "sa",
        "sc",
        "sd",
        "se",
        "sg",
        "si",
        "sk",
        "sl",
        "sm",
        "sn",
        "so",
        "sq",
        "sr",
        "ss",
        "st",
        "su",
        "sv",
        "sw",
        "ta",
        "te",
        "tg",
        "th",
        "ti",
        "tk",
        "tl",
        "tn",
        "to",
        "tr",
        "ts",
        "tt",
        "tw",
        "ty",
        "ug",
        "uk",
        "ur",
        "uz",
        "ve",
        "vi",
        "vo",
        "wa",
        "wo",
        "xh",
        "yi",
        "yo",
        "za",
        "zh",
        "zu",
        "dar",
        "hmo",
        "psm",
        "swz",
        "wam"
      ],
      "errorMessage": {
        "type": "TitleLanguage must be a String",
        "enum": "TitleLanguage must be a aa, ab, ae, af, ak, am, an, ar, as, av, ay, az, ba, be, bg, bh, bi, bm, bn, bo, br, bs, ca, ce, ch, co, cr, cs, cu, cv, cy, da, de, dv, dz, ee, el, en, eo, es, et, eu, fa, ff, fi, fj, fl, fo, fr, fy, ga, gd, gl, gn, gu, gv, ha, haw, he, hi, ho, hr, ht, hu, hy, hz, ia, id, ie, ig, ii, ik, io, is, it, iu, ja, jv, ka, kg, ki, kj, kk, kl, km, kn, ko, kr, ks, ku, kv, kw, ky, la, lb, lg, li, ln, lo, lt, lu, lv, mg, mh, mi, mk, ml, mn, mr, ms, mt, my, na, nb, nd, ne, ng, nl, nn, no, nr, nv, ny, oc, oj, om, or, os, pa, pi, pl, ps, pt, qu, rm, rn, ro, ru, rw, sa, sc, sd, se, sg, si, sk, sl, sm, sn, so, sq, sr, ss, st, su, sv, sw, ta, te, tg, th, ti, tk, tl, tn, to, tr, ts, tt, tw, ty, ug, uk, ur, uz, ve, vi, vo, wa, wo, xh, yi, yo, za, zh or  zu, dar, hmo, psm, swz, wam irrepective to case."
      }
    },
    "ReleaseDate": {
      "pattern": "^(.*)$",
      "type": "string",
      "errorMessage": {
        "type": "ReleaseDate must be a String"
      }
    },
    "EpisodeNumber": {
      "type": "integer",
      "format": "int32",
      "errorMessage": {
        "type": "EpisodeNumber must be an Integer",
        "format": "EpisodeNumber must be in int32 format"
      }
    },
    "EpisodeClass": {
      "transform": [
        "trim",
        "toEnumCase"
      ],
      "type": "string",
      "enum": [
        "Main",
        "Omnibus",
        "Pilot",
        "Recut",
        "Segment",
        "Special",
        "Standalone",
        "one-time-only"
      ],
      "errorMessage": {
        "type": "EpisodeClass must be a String",
        "enum": "EpisodeClass must be a Main, Omnibus, Pilot, Recut, Segment, Special, Standalone or one-time-only irrepective to case."
      }
    },
    "PrimaryGenre": {
      "minLength": 1,
      "pattern": "^(.*)$",
      "type": "string",
      "errorMessage": {
        "type": "PrimaryGenre must be a String",
        "minLength": "PrimaryGenre should have a minimum one character"
      }
    },
    "SecondaryGenre": {
      "pattern": "^(.*)$",
      "type": "string",
      "errorMessage": {
        "type": "SecondaryGenre must be a String"
      }
    },
    "CountryOfOrigin": {
      "transform": [
        "trim",
        "toEnumCase"
      ],
      "type": "string",
      "errorMessage": {
        "type": "CountryOfOrigin must be a String",
        "enum": "CountryOfOrigin must be a AF, AX, AL, DZ, AS, AD, AO, AI, AQ, AG, AR, AM, AW, AU, AT, AZ, BS, BH, BD, BB, BY, BE, BZ, BJ, BM, BT, BO, BQ, BA, BW, BV, BR, IO, BN, BG, BF, BI, KH, CM, CA, CV, KY, CF, TD, CL, CN, CX, CC, CO, KM, CG, CD, CK, CR, CI, HR, CU, CW, CY, CZ, DK, DJ, DM, DO, EC, EG, SV, GQ, ER, EE, ET, FK, FO, FJ, FI, FR, GF, PF, TF, GA, GM, GE, DE, GH, GI, GR, GL, GD, GP, GU, GT, GG, GN, GW, GY, HT, HM, VA, HN, HK, HU, IS, IN, ID, IR, IQ, IE, IM, IL, IT, JM, JP, JE, JO, KZ, KE, KI, KP, KR, KW, KG, LA, LV, LB, LS, LR, LY, LI, LT, LU, MO, MK, MG, MW, MY, MV, ML, MT, MH, MQ, MR, MU, YT, MX, FM, MD, MC, MN, ME, MS, MA, MZ, MM, NA, NR, NP, NL, NC, NZ, NI, NE, NG, NU, NF, MP, NO, OM, PK, PW, PS, PA, PG, PY, PE, PH, PN, PL, PT, PR, QA, RE, RO, RU, RW, BL, SH, KN, LC, MF, PM, VC, WS, SM, ST, SA, SN, RS, SC, SL, SG, SX, SK, SI, SB, SO, ZA, GS, SS, ES, LK, SD, SR, SJ, SZ, SE, CH, SY, TW, TJ, TZ, TH, TL, TG, TK, TO, TT, TN, TR, TM, TC, TV, UG, UA, AE, GB, US, UM, UY, UZ, VU, VE, VN, VG, VI, WF, EH, YE, ZM or ZW irrepective to case."
      },
      "enum": [
        "AF",
        "AX",
        "AL",
        "DZ",
        "AS",
        "AD",
        "AO",
        "AI",
        "AQ",
        "AG",
        "AR",
        "AM",
        "AW",
        "AU",
        "AT",
        "AZ",
        "BS",
        "BH",
        "BD",
        "BB",
        "BY",
        "BE",
        "BZ",
        "BJ",
        "BM",
        "BT",
        "BO",
        "BQ",
        "BA",
        "BW",
        "BV",
        "BR",
        "IO",
        "BN",
        "BG",
        "BF",
        "BI",
        "KH",
        "CM",
        "CA",
        "CV",
        "KY",
        "CF",
        "TD",
        "CL",
        "CN",
        "CX",
        "CC",
        "CO",
        "KM",
        "CG",
        "CD",
        "CK",
        "CR",
        "CI",
        "HR",
        "CU",
        "CW",
        "CY",
        "CZ",
        "DK",
        "DJ",
        "DM",
        "DO",
        "EC",
        "EG",
        "SV",
        "GQ",
        "ER",
        "EE",
        "ET",
        "FK",
        "FO",
        "FJ",
        "FI",
        "FR",
        "GF",
        "PF",
        "TF",
        "GA",
        "GM",
        "GE",
        "DE",
        "GH",
        "GI",
        "GR",
        "GL",
        "GD",
        "GP",
        "GU",
        "GT",
        "GG",
        "GN",
        "GW",
        "GY",
        "HT",
        "HM",
        "VA",
        "HN",
        "HK",
        "HU",
        "IS",
        "IN",
        "ID",
        "IR",
        "IQ",
        "IE",
        "IM",
        "IL",
        "IT",
        "JM",
        "JP",
        "JE",
        "JO",
        "KZ",
        "KE",
        "KI",
        "KP",
        "KR",
        "KW",
        "KG",
        "LA",
        "LV",
        "LB",
        "LS",
        "LR",
        "LY",
        "LI",
        "LT",
        "LU",
        "MO",
        "MK",
        "MG",
        "MW",
        "MY",
        "MV",
        "ML",
        "MT",
        "MH",
        "MQ",
        "MR",
        "MU",
        "YT",
        "MX",
        "FM",
        "MD",
        "MC",
        "MN",
        "ME",
        "MS",
        "MA",
        "MZ",
        "MM",
        "NA",
        "NR",
        "NP",
        "NL",
        "NC",
        "NZ",
        "NI",
        "NE",
        "NG",
        "NU",
        "NF",
        "MP",
        "NO",
        "OM",
        "PK",
        "PW",
        "PS",
        "PA",
        "PG",
        "PY",
        "PE",
        "PH",
        "PN",
        "PL",
        "PT",
        "PR",
        "QA",
        "RE",
        "RO",
        "RU",
        "RW",
        "BL",
        "SH",
        "KN",
        "LC",
        "MF",
        "PM",
        "VC",
        "WS",
        "SM",
        "ST",
        "SA",
        "SN",
        "RS",
        "SC",
        "SL",
        "SG",
        "SX",
        "SK",
        "SI",
        "SB",
        "SO",
        "ZA",
        "GS",
        "SS",
        "ES",
        "LK",
        "SD",
        "SR",
        "SJ",
        "SZ",
        "SE",
        "CH",
        "SY",
        "TW",
        "TJ",
        "TZ",
        "TH",
        "TL",
        "TG",
        "TK",
        "TO",
        "TT",
        "TN",
        "TR",
        "TM",
        "TC",
        "TV",
        "UG",
        "UA",
        "AE",
        "GB",
        "US",
        "UM",
        "UY",
        "UZ",
        "VU",
        "VE",
        "VN",
        "VG",
        "VI",
        "WF",
        "EH",
        "YE",
        "ZM",
        "ZW"
      ]
    },
    "SynopsisShort": {
      "pattern": "^(.*)$",
      "type": "string",
      "errorMessage": {
        "type": "SynopsisShort must be a String"
      }
    },
    "SynopsisLong": {
      "pattern": "^(.*)$",
      "type": "string",
      "errorMessage": {
        "type": "SynopsisLong must be a String"
      }
    },
    "ApproximateLength": {
      "minLength": 1,
      "pattern": "^(.*)$",
      "type": "string",
      "errorMessage": {
        "type": "ApproximateLength must be a String",
        "minLength": "ApproximateLength should have a minimum one character"
      }
    },
    "Language": {
      "required": [
        "PrimaryLanguage",
        "PrimaryMode"
      ],
      "type": "object",
      "errorMessage": {
        "type": "Language should be an object",
        "required": {
          "PrimaryLanguage": "PrimaryLanguage is Required",
          "PrimaryMode": "PrimaryMode is Required"
        }
      },
      "properties": {
        "PrimaryMode": {
          "pattern": "^(.*)$",
          "type": "string",
          "errorMessage": {
            "type": "PrimaryMode must be a String"
          }
        },
        "PrimaryLanguage": {
          "transform": [
            "trim",
            "toEnumCase"
          ],
          "type": "string",
          "errorMessage": {
            "type": "PrimaryLanguage must be a String",
            "enum": "PrimaryLanguage must be a aa, ab, ae, af, ak, am, an, ar, as, av, ay, az, ba, be, bg, bh, bi, bm, bn, bo, br, bs, ca, ce, ch, co, cr, cs, cu, cv, cy, da, de, dv, dz, ee, el, en, eo, es, et, eu, fa, ff, fi, fj, fl, fo, fr, fy, ga, gd, gl, gn, gu, gv, ha, haw, he, hi, ho, hr, ht, hu, hy, hz, ia, id, ie, ig, ii, ik, io, is, it, iu, ja, jv, ka, kg, ki, kj, kk, kl, km, kn, ko, kr, ks, ku, kv, kw, ky, la, lb, lg, li, ln, lo, lt, lu, lv, mg, mh, mi, mk, ml, mn, mr, ms, mt, my, na, nb, nd, ne, ng, nl, nn, no, nr, nv, ny, oc, oj, om, or, os, pa, pi, pl, ps, pt, qu, rm, rn, ro, ru, rw, sa, sc, sd, se, sg, si, sk, sl, sm, sn, so, sq, sr, ss, st, su, sv, sw, ta, te, tg, th, ti, tk, tl, tn, to, tr, ts, tt, tw, ty, ug, uk, ur, uz, ve, vi, vo, wa, wo, xh, yi, yo, za, zh or zu, dar, hmo, psm, swz, wam  irrepective to case."
          },
          "enum": [
            "aa",
            "ab",
            "ae",
            "af",
            "ak",
            "am",
            "an",
            "ar",
            "as",
            "av",
            "ay",
            "az",
            "ba",
            "be",
            "bg",
            "bh",
            "bi",
            "bm",
            "bn",
            "bo",
            "br",
            "bs",
            "ca",
            "ce",
            "ch",
            "co",
            "cr",
            "cs",
            "cu",
            "cv",
            "cy",
            "da",
            "de",
            "dv",
            "dz",
            "ee",
            "el",
            "en",
            "eo",
            "es",
            "et",
            "eu",
            "fa",
            "ff",
            "fi",
            "fj",
            "fl",
            "fo",
            "fr",
            "fy",
            "ga",
            "gd",
            "gl",
            "gn",
            "gu",
            "gv",
            "ha",
            "haw",
            "he",
            "hi",
            "ho",
            "hr",
            "ht",
            "hu",
            "hy",
            "hz",
            "ia",
            "id",
            "ie",
            "ig",
            "ii",
            "ik",
            "io",
            "is",
            "it",
            "iu",
            "ja",
            "jv",
            "ka",
            "kg",
            "ki",
            "kj",
            "kk",
            "kl",
            "km",
            "kn",
            "ko",
            "kr",
            "ks",
            "ku",
            "kv",
            "kw",
            "ky",
            "la",
            "lb",
            "lg",
            "li",
            "ln",
            "lo",
            "lt",
            "lu",
            "lv",
            "mg",
            "mh",
            "mi",
            "mk",
            "ml",
            "mn",
            "mr",
            "ms",
            "mt",
            "my",
            "na",
            "nb",
            "nd",
            "ne",
            "ng",
            "nl",
            "nn",
            "no",
            "nr",
            "nv",
            "ny",
            "oc",
            "oj",
            "om",
            "or",
            "os",
            "pa",
            "pi",
            "pl",
            "ps",
            "pt",
            "qu",
            "rm",
            "rn",
            "ro",
            "ru",
            "rw",
            "sa",
            "sc",
            "sd",
            "se",
            "sg",
            "si",
            "sk",
            "sl",
            "sm",
            "sn",
            "so",
            "sq",
            "sr",
            "ss",
            "st",
            "su",
            "sv",
            "sw",
            "ta",
            "te",
            "tg",
            "th",
            "ti",
            "tk",
            "tl",
            "tn",
            "to",
            "tr",
            "ts",
            "tt",
            "tw",
            "ty",
            "ug",
            "uk",
            "ur",
            "uz",
            "ve",
            "vi",
            "vo",
            "wa",
            "wo",
            "xh",
            "yi",
            "yo",
            "za",
            "zh",
            "zu",
            "dar",
            "hmo",
            "psm",
            "swz",
            "wam"
          ]
        },
        "SecondaryLanguage": {
          "transform": [
            "trim",
            "toEnumCase"
          ],
          "type": "string",
          "errorMessage": {
            "type": "SecondaryLanguage must be a String",
            "enum": "SecondaryLanguage must be a aa, ab, ae, af, ak, am, an, ar, as, av, ay, az, ba, be, bg, bh, bi, bm, bn, bo, br, bs, ca, ce, ch, co, cr, cs, cu, cv, cy, da, de, dv, dz, ee, el, en, eo, es, et, eu, fa, ff, fi, fj, fl, fo, fr, fy, ga, gd, gl, gn, gu, gv, ha, haw, he, hi, ho, hr, ht, hu, hy, hz, ia, id, ie, ig, ii, ik, io, is, it, iu, ja, jv, ka, kg, ki, kj, kk, kl, km, kn, ko, kr, ks, ku, kv, kw, ky, la, lb, lg, li, ln, lo, lt, lu, lv, mg, mh, mi, mk, ml, mn, mr, ms, mt, my, na, nb, nd, ne, ng, nl, nn, no, nr, nv, ny, oc, oj, om, or, os, pa, pi, pl, ps, pt, qu, rm, rn, ro, ru, rw, sa, sc, sd, se, sg, si, sk, sl, sm, sn, so, sq, sr, ss, st, su, sv, sw, ta, te, tg, th, ti, tk, tl, tn, to, tr, ts, tt, tw, ty, ug, uk, ur, uz, ve, vi, vo, wa, wo, xh, yi, yo, za, zh or zu, dar, hmo, psm, swz, wam irrepective to case."
          },
          "enum": [
            "aa",
            "ab",
            "ae",
            "af",
            "ak",
            "am",
            "an",
            "ar",
            "as",
            "av",
            "ay",
            "az",
            "ba",
            "be",
            "bg",
            "bh",
            "bi",
            "bm",
            "bn",
            "bo",
            "br",
            "bs",
            "ca",
            "ce",
            "ch",
            "co",
            "cr",
            "cs",
            "cu",
            "cv",
            "cy",
            "da",
            "de",
            "dv",
            "dz",
            "ee",
            "el",
            "en",
            "eo",
            "es",
            "et",
            "eu",
            "fa",
            "ff",
            "fi",
            "fj",
            "fl",
            "fo",
            "fr",
            "fy",
            "ga",
            "gd",
            "gl",
            "gn",
            "gu",
            "gv",
            "ha",
            "haw",
            "he",
            "hi",
            "ho",
            "hr",
            "ht",
            "hu",
            "hy",
            "hz",
            "ia",
            "id",
            "ie",
            "ig",
            "ii",
            "ik",
            "io",
            "is",
            "it",
            "iu",
            "ja",
            "jv",
            "ka",
            "kg",
            "ki",
            "kj",
            "kk",
            "kl",
            "km",
            "kn",
            "ko",
            "kr",
            "ks",
            "ku",
            "kv",
            "kw",
            "ky",
            "la",
            "lb",
            "lg",
            "li",
            "ln",
            "lo",
            "lt",
            "lu",
            "lv",
            "mg",
            "mh",
            "mi",
            "mk",
            "ml",
            "mn",
            "mr",
            "ms",
            "mt",
            "my",
            "na",
            "nb",
            "nd",
            "ne",
            "ng",
            "nl",
            "nn",
            "no",
            "nr",
            "nv",
            "ny",
            "oc",
            "oj",
            "om",
            "or",
            "os",
            "pa",
            "pi",
            "pl",
            "ps",
            "pt",
            "qu",
            "rm",
            "rn",
            "ro",
            "ru",
            "rw",
            "sa",
            "sc",
            "sd",
            "se",
            "sg",
            "si",
            "sk",
            "sl",
            "sm",
            "sn",
            "so",
            "sq",
            "sr",
            "ss",
            "st",
            "su",
            "sv",
            "sw",
            "ta",
            "te",
            "tg",
            "th",
            "ti",
            "tk",
            "tl",
            "tn",
            "to",
            "tr",
            "ts",
            "tt",
            "tw",
            "ty",
            "ug",
            "uk",
            "ur",
            "uz",
            "ve",
            "vi",
            "vo",
            "wa",
            "wo",
            "xh",
            "yi",
            "yo",
            "za",
            "zh",
            "zu",
            "dar",
            "hmo",
            "psm",
            "swz",
            "wam"
          ]
        }
      }
    },
    "ContentIDList": {
      "type": "array",
      "uniqueItems": true,
      "errorMessage": {
        "type": "ContentIDList must be an array",
        "uniqueItems": "ContentIDList contains duplicate values"
      },
      "items": {
        "required": [
          "ContentID"
        ],
        "type": "object",
        "errorMessage": {
          "type": "items should be an object",
          "required": {
            "ContentID": "ContentID is Required"
          }
        },
        "properties": {
          "ContentID": {
            "pattern": "^(.*)$",
            "type": "string",
            "errorMessage": {
              "type": "ContentID must be a String"
            }
          }
        }
      }
    },
    "CreditsList": {
      "type": "array",
      "uniqueItems": true,
      "errorMessage": {
        "type": "CreditsList must be an array",
        "uniqueItems": "CreditsList contains duplicate values"
      },
      "items": {
        "required": [
          "TalentID"
        ],
        "type": "object",
        "errorMessage": {
          "type": "items should be an object",
          "required": {
            "ContentID": "TalentID is Required"
          }
        },
        "properties": {
          "Role": {
            "transform": [
              "trim",
              "toEnumCase"
            ],
            "type": "string",
            "errorMessage": {
              "type": "Role must be a String",
              "enum": "Role must be a Actor, Analyst, Anchor, Animal Actor, Animation, Appearing, Art Director, Announcer, Assoc. Producer, Author, Casting, Choreographer, Cinematographer, Commentator, Composer, Conductor, Co-Producer, Costumes, Director, Editor, Executive Producer, Guest, Host, Make Up, Producer, Judge, Key Grip, Music Director, Musician, Narrator, Panelist, Performer, Photographer, Play-By-Play, Production Designer, Reality Cast Member, Remarks by, Reporter, Screenwriter, Set Design, Sidekick, Sound Effects, Speaker, Special Effects, Studio, Stunts, Subject (person only), Technical Advisor, Voice, Writer, Interviewer, Other, Essayist or Moderator irrepective to case."
            },
            "enum": [
              "Actor",
              "Analyst",
              "Anchor",
              "Animal Actor",
              "Animation",
              "Appearing",
              "Art Director",
              "Announcer",
              "Assoc. Producer",
              "Author",
              "Casting",
              "Choreographer",
              "Cinematographer",
              "Commentator",
              "Composer",
              "Conductor",
              "Co-Producer",
              "Costumes",
              "Director",
              "Editor",
              "Executive Producer",
              "Guest",
              "Host",
              "Make Up",
              "Producer",
              "Judge",
              "Key Grip",
              "Music Director",
              "Musician",
              "Narrator",
              "Panelist",
              "Performer",
              "Photographer",
              "Play-By-Play",
              "Production Designer",
              "Reality Cast Member",
              "Remarks by",
              "Reporter",
              "Screenwriter",
              "Set Design",
              "Sidekick",
              "Sound Effects",
              "Speaker",
              "Special Effects",
              "Studio",
              "Stunts",
              "Subject (person only)",
              "Technical Advisor",
              "Voice",
              "Writer",
              "Interviewer",
              "Other",
              "Essayist",
              "Moderator"
            ]
          },
          "TalentID": {
            "pattern": "^(.*)$",
            "type": "string",
            "errorMessage": {
              "type": "TalentID must be a String"
            }
          },
          "DisplayName": {
            "pattern": "^(.*)$",
            "type": "string",
            "errorMessage": {
              "type": "DisplayName must be a String"
            }
          }
        }
      }
    },
    "OrganizationList": {
      "type": "array",
      "uniqueItems": true,
      "errorMessage": {
        "type": "OrganizationList must be an Array",
        "uniqueItems": "OrganizationList contains duplicate values",
        "contains": "Required ContactInfoList and OrganizationID in Organisation List"
      },
      "contains": {
        "required": [
          "ContactInfoList",
          "OrganizationID"
        ],
        "type": "object",
        "errorMessage": {
          "type": "contains should be an object",
          "required": {
            "ContactInfoList": "ContactInfoList is Required",
            "OrganizationID": "OrganizationID is Required"
          }
        },
        "properties": {
          "OrganizationID": {
            "type": "integer",
            "format": "int32",
            "errorMessage": {
              "type": "OrganizationID must be an Integer",
              "uniqueItems": "OrganizationID contains duplicate values"
            }
          },
          "DisplayName": {
            "pattern": "^(.*)$",
            "type": "string",
            "errorMessage": {
              "type": "DisplayName must be a String"
            }
          },
          "Domain": {
            "pattern": "^(.*)$",
            "type": "string",
            "errorMessage": {
              "type": "Domain must be a String"
            }
          },
          "Role": {
            "enum": [
              "Distributor"
            ],
            "type": "string",
            "errorMessage": {
              "type": "Role must be a String",
              "enum": "Required Minimum one Distributor role in Organisation List"
            }
          },
          "ContactInfoList": {
            "type": "array",
            "errorMessage": {
              "type": "ContactInfoList must be an Array"
            },
            "items": {
              "required": [
                "ContactID",
                "ContactName"
              ],
              "type": "object",
              "errorMessage": {
                "type": "items should be an object",
                "required": {
                  "ContactID": "ContactID is Required",
                  "ContactName": "ContactName is Required"
                }
              },
              "properties": {
                "ContactID": {
                  "type": "integer",
                  "format": "int32",
                  "errorMessage": {
                    "type": "ContactID must be an Integer",
                    "format": "ContactID must be in int32 format"
                  }
                },
                "Phone": {
                  "pattern": "^(.*)$",
                  "type": "string",
                  "errorMessage": {
                    "type": "Phone must be a String"
                  }
                },
                "PhoneType": {
                  "pattern": "^(.*)$",
                  "type": "string",
                  "errorMessage": {
                    "type": "PhoneType must be a String"
                  }
                },
                "Address": {
                  "pattern": "^(.*)$",
                  "type": "string",
                  "errorMessage": {
                    "type": "Address must be a String"
                  }
                },
                "PrimaryEmail": {
                  "pattern": "^(.*)$",
                  "type": "string",
                  "errorMessage": {
                    "type": "PrimaryEmail must be a String"
                  }
                },
                "ContactName": {
                  "pattern": "^(.*)$",
                  "type": "string",
                  "errorMessage": {
                    "type": "ContactName must be a String"
                  }
                }
              }
            }
          }
        }
      },
      "items": {
        "required": [
          "ContactInfoList",
          "OrganizationID"
        ],
        "type": "object",
        "errorMessage": {
          "type": "items should be an object",
          "required": {
            "ContactInfoList": "ContactInfoList is Required",
            "OrganizationID": "OrganizationID is Required"
          }
        },
        "properties": {
          "OrganizationID": {
            "type": "integer",
            "format": "int32",
            "errorMessage": {
              "type": "OrganizationID must be an Integer",
              "format": "OrganizationID must be in int32 format"
            }
          },
          "DisplayName": {
            "pattern": "^(.*)$",
            "type": "string",
            "errorMessage": {
              "type": "DisplayName must be a String"
            }
          },
          "Domain": {
            "pattern": "^(.*)$",
            "type": "string",
            "errorMessage": {
              "type": "Domain must be a String"
            }
          },
          "Role": {
            "pattern": "^(.*)$",
            "type": "string",
            "errorMessage": {
              "type": "Role must be a String"
            }
          },
          "ContactInfoList": {
            "type": "array",
            "errorMessage": {
              "type": "ContactInfoList must be an Array"
            },
            "items": {
              "required": [
                "ContactID",
                "ContactName"
              ],
              "type": "object",
              "errorMessage": {
                "type": "items should be an object",
                "required": {
                  "ContactID": "ContactID is Required",
                  "ContactName": "ContactName is Required"
                }
              },
              "properties": {
                "ContactID": {
                  "type": "integer",
                  "format": "int32",
                  "errorMessage": {
                    "type": "ContactID must be an Integer",
                    "format": "ContactID must be in int32 format"
                  }
                },
                "Phone": {
                  "pattern": "^(.*)$",
                  "type": "string",
                  "errorMessage": {
                    "type": "Phone must be a String"
                  }
                },
                "PhoneType": {
                  "pattern": "^(.*)$",
                  "type": "string",
                  "errorMessage": {
                    "type": "PhoneType must be a String"
                  }
                },
                "Address": {
                  "pattern": "^(.*)$",
                  "type": "string",
                  "errorMessage": {
                    "type": "Address must be a String"
                  }
                },
                "PrimaryEmail": {
                  "pattern": "^(.*)$",
                  "type": "string",
                  "errorMessage": {
                    "type": "PrimaryEmail must be a String"
                  }
                },
                "ContactName": {
                  "pattern": "^(.*)$",
                  "type": "string",
                  "errorMessage": {
                    "type": "ContactName must be a String"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}